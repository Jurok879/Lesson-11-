import pandas as pd
import numpy as np


'''  PANDAS  '''

""" 
Основные функции Pandas:
* cоздание и работа с DataFrame — это основной объект в Pandas, который представляет собой двумерную структуру данных,
похожую на таблицу в Excel;
* cериализация данных — возможность преобразования данных в различные форматы, такие как CSV, JSON, HTML и другие;
манипуляция данными — возможность фильтрации, сортировки, группировки и агрегирования данных;
* анализ временных рядов — возможность работы с данными, которые изменяются со временем, такими как финансовые
или метеорологические данные;
* визуализация данных — возможность создания графиков и диаграмм для наглядного представления данных. 
"""

# Создание DataFrame из списка словарей
data = [{'name': 'Денис', 'age': 30}, {'name': 'Макс', 'age': 33}, {'name': 'Роман', 'age': 25}]
df = pd.DataFrame(data)
print(df, '\n')

# Фильтрация данных по условию
older_than_25 = df[df['age'] > 25]
print(older_than_25, '\n')

# Сортировка данных по столбцам
sorted_df = df.sort_values(['age'], ascending=True)
print(sorted_df, '\n')

# Агрегация данных
total_ages = df['age'].sum()
print(f"Сумма возрастов: {total_ages} \n")
print("Код pandas завершён \n")


'''  NUMPY  '''

"""
Основные возможности и функции библиотеки NumPy:
* NumPy - это мощный класс ndarray, который представляет собой многомерный массив чисел,
символов или объектов. Массивы NumPy могут быть одномерными, двумерными, трехмерными и так далее;
* NumPy поддерживает широкий спектр операций с массивами, включая сложение, вычитание, умножение, деление,
логические операции и т.д. Эти операции выполняются параллельно для всех элементов массива,
что значительно ускоряет вычисления;
* NumPy предоставляет множество функций и методов для работы с массивами, включая линейную алгебру
(например, умножение матриц), статистику (среднее значение, стандартное отклонение) и обработку изображений
(преобразование Фурье).
"""

# Создание одномерного массива целых чисел от 0 до 9
x = np.arange(10)
print(x,'\n')

# Создание двумерного массива случайных вещественных чисел размером 5x5
y = np.random.rand(5, 5)
print(y,'\n')

# Сложение двух массивов
x = np.arange(10)
y = np.ones(10) * 3
z = x + y
print(z,'\n')

# Умножение массивов
a = np.arange(9).reshape(3, 3)
b = np.ones((3, 3))
c = a * b
print(c,'\n')
print("Код NumPy завершён")